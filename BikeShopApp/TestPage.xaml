<Page x:Class="BikeShopApp.TestPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BikeShopApp"
      xmlns:bl="clr-namespace:BusinessLogic"
      xmlns:m="clr-namespace:BikeShopApp.Maths"
      d:DesignHeight="380" d:DesignWidth="800"
      mc:Ignorable="d" 
      Title="TestPage">
    <!--<Page.Resources>
        <m:TwiceConverter x:Key="twiceConv"/>
    </Page.Resources>-->

    <Grid>
        <!--<Grid Loaded="Grid_Loaded">-->
        <!--<Label>
            <bl:Car x:Name="car1" Speed="50.4" Color="Red">
                <bl:Car.Driver>
                    <bl:Human Name="Ted" HasDrivingLicense ="true"/>
                </bl:Car.Driver>
            </bl:Car>
        </Label>-->

        <!--<Grid Width="50" Height="50" Background="Orange">
            <Button Content="Hell World" Margin="5" />
        </Grid>-->

        <!-- canvas는 화면 넘어가는 것도 허용해줌, 위치지정가능 -->
        <!-- Grid는 제약이 걸려있음 범위 안에서만 허용 -->
        <!--<Canvas Background="Orange" Margin="30">
            <Button Canvas.Left="10" Canvas.Top="15" Content="Button A"/>
            <Button Canvas.Left="10" Canvas.Bottom="20" Content="Button B"/>
            <Button Canvas.Right="10" Canvas.Top="15" Content="Button C"/>
        </Canvas>-->

        <!--<StackPanel Background="Orange" Margin="30" Orientation="Vertical">
            <Button Canvas.Left="10" Canvas.Top="15" Content="Button A"/>
            <Button Canvas.Left="10" Canvas.Bottom="20" Content="Button B"/>
            <Button Canvas.Right="10" Canvas.Top="15" Content="Button C"/>
        </StackPanel>-->

        <!--<DockPanel Background="Orange" Margin="30">
            <Button Content="Button A" DockPanel.Dock="Left"/>
            <Button Content="Button B" DockPanel.Dock="Right"/>
            <Button Content="Button C" DockPanel.Dock="Top"/>
            <Button Content="Button D" DockPanel.Dock="Bottom"/>
            <Button Content="Button E"/>
        </DockPanel>-->

        <!--<Grid Width="500" Height="200">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            -->
        <!-- Grid.Row, Grid.Column 배열과 같음 -->
        <!--
            <Button Grid.Row="0" Grid.Column="0" Content="Button A" Margin="5"/>
            <Button Grid.Row="0" Grid.Column="1" Content="Button B" Margin="5"/>
            <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Content="Button C" Margin="5"/>
            
            -->
        <!-- ColumnSpan 은 컬럼 합쳐주는것 -->
        <!--
            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Content="Button D" Margin="5"/>
        </Grid>-->

        <!--<Grid Width="500" Height="100">
            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                -->
        <!-- [*] 배율을 1:1:1로 맞춘다는 것(크기지정) -->
        <!--
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
        </Grid>-->

        <!--<Grid Width="320" Height="200">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            -->
        <!--BusinessLogin.car출력됨-->
        <!--
            <ListBox x:Name="LstCar" Grid.Column="0"
                     ItemsSource="{Binding}">
                -->
        <!--<Label Content="Element1"/>
                <Label Content="Element2"/>
                <TextBlock Text="Element3"/>

                <GroupBox Header="Element4">
                    This is a subsentence
                </GroupBox>-->

        <!-- speed값 출력됨 -->
        <!--
                <ListBox.ItemTemplate>
                    -->
        <!--<DataTemplate>
                        -->
        <!--라벨과 텍스트블럭의 차이는 간격-->
        <!--
                        <TextBlock Text="{Binding Speed}"/>
                        -->
        <!--<Label Content="{Binding Speed}"/>-->
        <!--
                    </DataTemplate>-->
        <!--
                    <ItemContainerTemplate>
                        <StackPanel>
                            <TextBlock Text="속도"/>
                            <TextBox Text="{Binding Speed, StringFormat='{}{0:0}'}"/>
                            <Slider Maximum="300" Value="{Binding Speed}"/>
                            <TextBlock Text="색상"/>
                            <Border Height="20">
                                <Border.Background>
                                    <SolidColorBrush Color="{Binding Color}"/>
                                </Border.Background>
                            </Border>
                            <TextBox Text="{Binding Color}"/>
                            <TextBlock Text="운전자"/>
                            <TextBox Text="{Binding Driver.Name}"/>
                        </StackPanel>
                    </ItemContainerTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ComboBox Grid.Column="2" Height="30" VerticalAlignment="Top">
                <Label Content="Element1"/>
                <Label Content="Element2"/>
                <TextBlock Text="Element3"/>

                <GroupBox Header="Element4">
                    This is a subsentence
                </GroupBox>
            </ComboBox>
        </Grid>-->

        <!--<StackPanel Margin="10">
            <Slider x:Name="slider" Value="10" Minimum="0" Maximum="100"/>
            -->
        <!-- binding해서 슬라이더 인스턴스 값을 넣어줌 {Binding 넣을값, ElementName = 인스턴스 이름}-->
        <!--
            <ProgressBar Height="30" Value="{Binding Value, ElementName=slider}"/>
            -->
        <!-- 출력되는 값 double에서 int로 바꿔주기-->
        <!--
            <TextBlock TextAlignment="Center" Text="{Binding Value, ElementName=slider, StringFormat='{}{0:0}'}"/>

            <TextBlock Text="{Binding Driver.Name}" FontSize="20" Height="30" TextAlignment="Center"/>
            -->
        <!-- IValueConvertor로 값을 변경해서 출력하기 -->
        <!--
            <TextBox Text="{Binding Speed, Mode=TwoWay, Converter={StaticResource twiceConv}}" FontSize="16" Width="100"/>
            <TextBlock Text="{Binding Speed, Converter={StaticResource twiceConv}}" FontSize="20"/>
        </StackPanel>-->

        <!--<Grid Width="300" Height="100">
            <Label Content="{StaticResource button}" Background="{StaticResource accentBrush}"/>
        </Grid>-->

        <Grid Width="300" Height="200">
            <Grid.RowDefinitions>
                <RowDefinition Height="97*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Button Content="Click" FontSize="20" Click="Button_Click" Margin="-228,-72,372,213.091">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle Fill="#AA000000" Margin="5,5,0,0"
                                   RadiusX="5" RadiusY="5"/>
                            <Rectangle Fill="{TemplateBinding Background}" Margin="0,0,5,5"
                                   RadiusX="5" RadiusY="5"/>
                            <!--그림자 작업-->
                            <Viewbox Margin="0,0,0,5">
                                <Label Content="{TemplateBinding Content}"/>
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
        <!--<Button Content="Button" HorizontalAlignment="Left" Margin="60,143,0,0" VerticalAlignment="Top" Width="167" Height="147"/>-->

        <!--<StackPanel Width="100" Margin="30">
            <Button Style="{StaticResource niceButton}" Content="Button A"/>
            <Button Content="Button B"/>
            <Button Style="{StaticResource niceButton}" Content="Button C"/>
        </StackPanel>-->
        
    </Grid>
</Page>
 